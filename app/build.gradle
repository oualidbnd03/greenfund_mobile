plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.crowdfundpro.android'
    compileSdk 33

    defaultConfig {
        applicationId "com.crowdfundpro.android"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Configuration des variables d'environnement
        buildConfigField "String", "API_BASE_URL", "\"https://api.crowdfundpro.com/api/\""
        buildConfigField "String", "STRIPE_PUBLISHABLE_KEY", "\"pk_live_your_stripe_key\""
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "API_BASE_URL", "\"https://dev-api.crowdfundpro.com/api/\""
            buildConfigField "String", "STRIPE_PUBLISHABLE_KEY", "\"pk_test_your_stripe_key\""
        }
        
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            buildConfigField "String", "API_BASE_URL", "\"https://api.crowdfundpro.com/api/\""
            buildConfigField "String", "STRIPE_PUBLISHABLE_KEY", "\"pk_live_your_stripe_key\""
        }
    }

    signingConfigs {
        release {
            storeFile file('crowdfundpro-release.keystore')
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias "crowdfundpro"
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt']
        }
    }
}

dependencies {
    // Android Core
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // Material Design
    implementation 'com.google.android.material:material:1.9.0'

    // Architecture Components
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.6.1'
    implementation 'androidx.navigation:navigation-fragment:2.6.0'
    implementation 'androidx.navigation:navigation-ui:2.6.0'

    // Room Database
    implementation 'androidx.room:room-runtime:2.5.0'
    implementation 'androidx.room:room-rxjava3:2.5.0'
    annotationProcessor 'androidx.room:room-compiler:2.5.0'

    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.11.0'
    implementation 'com.google.code.gson:gson:2.10.1'

    // Image Loading
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'

    // Charts and Visualizations
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Stripe Payments
    implementation 'com.stripe:stripe-android:20.25.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.1.1')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-performance'

    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'

    // Permissions
    implementation 'com.karumi:dexter:6.2.3'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'org.robolectric:robolectric:4.10.3'
    
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.5.1'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'
    androidTestImplementation 'androidx.room:room-testing:2.5.0'
}

// Configuration des tâches personnalisées
task generateVersionInfo {
    doLast {
        def versionFile = new File(projectDir, "src/main/assets/version.json")
        versionFile.parentFile.mkdirs()
        versionFile.text = """
{
    "versionName": "${android.defaultConfig.versionName}",
    "versionCode": ${android.defaultConfig.versionCode},
    "buildTime": "${new Date().format('yyyy-MM-dd HH:mm:ss')}",
    "gitCommit": "${getGitCommitHash()}"
}
"""
    }
}

def getGitCommitHash() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    } catch (Exception e) {
        return "unknown"
    }
}

preBuild.dependsOn generateVersionInfo

