name: Build Signed Release APK

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code (e.g., 1)'
        required: true
        default: '1'

jobs:
  build-signed:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode and prepare signing key
      id: signing
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_FILE }}
      run: |
        echo "$KEYSTORE_BASE64" | base64 --decode > keystore.jks
        echo "keystore=keystore.jks" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Build Signed Release APK
      env:
        KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        KEY_PASS: ${{ secrets.SIGNING_KEY_PASSWORD }}
        STORE_PASS: ${{ secrets.SIGNING_STORE_PASSWORD }}
        KEYSTORE_PATH: ${{ steps.signing.outputs.keystore }}
      run: |
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file="$KEYSTORE_PATH" \
          -Pandroid.injected.signing.store.password="$STORE_PASS" \
          -Pandroid.injected.signing.key.alias="$KEY_ALIAS" \
          -Pandroid.injected.signing.key.password="$KEY_PASS"
      
    - name: Upload Signed Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-signed
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 90
        
    - name: Get APK Info
      run: |
        echo "=== Signed APK Information ==="
        if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          echo "Signed APK size: $(ls -lh app/build/outputs/apk/release/app-release.apk | awk '{print $5}')"
          echo "APK location: app/build/outputs/apk/release/app-release.apk"
        fi
        
    - name: Cleanup signing key
      if: always()
      run: rm -f keystore.jks 