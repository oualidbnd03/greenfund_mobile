name: Build Signed Release APK

on:
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      version_code:
        description: 'Version code (e.g., 1)'
        required: true
        default: '1'

jobs:
  build-signed:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create Keystore
      run: |
        keytool -genkey -v -keystore app/crowdfundpro-release.keystore -alias crowdfundpro -keyalg RSA -keysize 2048 -validity 10000 -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} -dname "CN=GreenFund, OU=Development, O=GreenFund, L=City, S=State, C=US"
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        
    - name: Build Signed Release APK
      run: ./gradlew assembleRelease
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      
    - name: Upload Signed Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-signed
        path: app/build/outputs/apk/release/app-release.apk
        retention-days: 90
        
    - name: Get APK Info
      run: |
        echo "=== Signed APK Information ==="
        if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
          echo "Signed APK size: $(ls -lh app/build/outputs/apk/release/app-release.apk | awk '{print $5}')"
          echo "APK location: app/build/outputs/apk/release/app-release.apk"
        fi 